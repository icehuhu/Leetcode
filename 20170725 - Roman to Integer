int romanToInt(std::string s) {
	int slen = s.length();
	std::unordered_map<char, int> m;
	m['I'] = 1;
	m['V'] = 5;
	m['X'] = 10;
	m['L'] = 50;
	m['C'] = 100;
	m['D'] = 500;
	m['M'] = 1000;

	int result = 0;
	int j,k;
	for ( int i = slen - 1; i >= 0; i--)
	{
		if (m.find(s[i]) != m.end())
		{
			j = m.find(s[i])->second;
			if (i + 1 < slen && m.find(s[i + 1])->second > j) result = result - j;
			else result = result + j;
		}
		else return 0;
	}
	return result;
}
