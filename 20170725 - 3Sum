std::vector<std::vector<int>> threeSum(std::vector<int>& nums) {
	int l,r,sum;
	int slen = nums.size();
	sort(nums.begin(), nums.end());

	std::vector<int> temp;
	std::vector<std::vector<int>> result;

	for (int i = 0; i < slen; i++)
	{
		l = i + 1;
		r = slen - 1;
		while (l < r)
		{
			sum = nums[i] + nums[l] + nums[r];
			if (sum == 0)
			{
				temp.clear();
				temp.push_back(nums[i]);
				temp.push_back(nums[l]);
				temp.push_back(nums[r]);
				result.push_back(temp);
				while (l <= r && nums[l] == temp[1]) l++;
				while (l <= r && nums[r] == temp[2]) r--;
			}
			else if (sum > 0) r--;
			else if (sum < 0) l++;
		}
	}

	sort(result.begin(), result.end());
	result.erase(unique(result.begin(), result.end()), result.end());
	return result;
}
